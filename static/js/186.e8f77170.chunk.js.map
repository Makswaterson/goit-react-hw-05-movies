{"version":3,"file":"static/js/186.e8f77170.chunk.js","mappings":"yNAoCA,UAhCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAgBJ,GAFzB,gBAETK,EAFS,EAETA,QACRN,EAAWM,GACXC,QAAQC,IAAIF,GAJK,gDAMjBC,QAAQC,IAAR,MANiB,yDAAH,qDASlBJ,GACD,GAAE,CAACH,IAEsB,IAAnBF,EAAQU,QACb,uEAEA,wBACGV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,QAA3B,OACX,2BACE,0BAAKF,EAAL,QACA,wBAAK,IAAIG,KAAKF,GAAYG,wBAC1B,uBAAIF,MAHGH,EADE,KASlB,C,+LChCKM,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,mCAAsCF,IADxD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBH,EAAAA,EAAAA,IAAA,gCACIF,EADJ,kBACiBK,EADjB,YADlB,uBACGF,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAuCP,IADzD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA+CP,IADjE,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA+BmB,GAA/B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA+CP,IADjE,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEArBPD,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Reviews/Reviews.jsx","services/GetMovies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/GetMovies';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const reviewsFetch = async () => {\n      try {\n        const { results } = await getMovieReviews(moviesId);\n        setReviews(results);\n        console.log(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    reviewsFetch();\n  }, [moviesId]);\n\n  return reviews.length === 0 ? (\n    <h3>We don`t have any reviews for this movie!</h3>\n  ) : (\n    <ul>\n      {reviews.map(({ id, author, updated_at, content }) => (\n        <li key={id}>\n          <h3>{author}:</h3>\n          <h4>{new Date(updated_at).toLocaleDateString()}</h4>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '2ee3138b7264f5045a82f30264daff8e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const { data } = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return data;\n}\nexport async function getSearchMovies(query) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return data;\n}\n\nexport async function getMovieDetails(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}?api_key=${KEY}`);\n  return data;\n}\nexport async function getMovieCredits(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n  return data;\n}\nexport async function getMovieReviews(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n  return data;\n}\n"],"names":["useState","reviews","setReviews","moviesId","useParams","useEffect","reviewsFetch","getMovieReviews","results","console","log","length","map","id","author","updated_at","content","Date","toLocaleDateString","KEY","getTrendingMovies","axios","data","getSearchMovies","query","getMovieDetails","movie_id","getMovieCredits"],"sourceRoot":""}