{"version":3,"file":"static/js/247.9d92ed2f.chunk.js","mappings":"iOA+CA,UA1Ca,WACX,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAgBJ,GAFzB,gBAENK,EAFM,EAENA,KACRN,EAAWM,GAHG,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACH,KAGF,0BACE,wBACGF,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACX,0BACoB,OAAjBD,GACC,gBACEE,IAAG,0CAAqCF,GACxCG,IAAKJ,EACLK,MAAM,SAGR,4BACE,gBAAKF,IAAKG,EAAcF,IAAKJ,EAAMK,MAAM,SACzC,sEAIJ,wBAAKL,KACL,uBAAIE,MAfGH,EADE,OAsBpB,C,+LC5CKQ,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,mCAAsCF,IADxD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBH,EAAAA,EAAAA,IAAA,gCACIF,EADJ,kBACiBK,EADjB,YADlB,uBACGF,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAuCP,IADzD,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BoB,GAA/B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA+CP,IADjE,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,yFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA+CP,IADjE,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEArBPD,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.jsx","services/GetMovies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/GetMovies';\nimport defaultImage from '../../Images/No_Image_Available.jpg';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const castFetch = async () => {\n      try {\n        const { cast } = await getMovieCredits(moviesId);\n        setCredits(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    castFetch();\n  }, [moviesId]);\n\n  return (\n    <div>\n      <ul>\n        {credits.map(({ id, name, profile_path, character }) => (\n          <li key={id}>\n            {profile_path !== null ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                alt={name}\n                width=\"150\"\n              ></img>\n            ) : (\n              <div>\n                <img src={defaultImage} alt={name} width=\"150\"></img>\n                <p>Sorry,there is no photo for this cast!</p>\n              </div>\n            )}\n\n            <h2>{name}</h2>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '2ee3138b7264f5045a82f30264daff8e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const { data } = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return data;\n}\nexport async function getSearchMovies(query) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return data;\n}\n\nexport async function getMovieDetails(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}?api_key=${KEY}`);\n  return data;\n}\nexport async function getMovieCredits(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n  return data;\n}\nexport async function getMovieReviews(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n  return data;\n}\n"],"names":["useState","credits","setCredits","moviesId","useParams","useEffect","castFetch","getMovieCredits","cast","console","log","map","id","name","profile_path","character","src","alt","width","defaultImage","KEY","getTrendingMovies","axios","data","getSearchMovies","query","getMovieDetails","movie_id","getMovieReviews"],"sourceRoot":""}