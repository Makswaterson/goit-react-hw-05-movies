{"version":3,"file":"static/js/996.55bcf697.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.styled.jsx","pages/Movies.jsx","services/GetMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  background-color: #3f51b5;\n  color: white;\n  padding: 8px 20px;\n  border-radius: 5px;\n  outline: 0;\n  text-transform: uppercase;\n  margin: 10px 0px;\n\n  cursor: pointer;\n  box-shadow: 0px 2px 2px lightgray;\n  transition: ease background-color 250ms;\n  &:hover {\n    background-color: orangered;\n  }\n`;\nexport const ContainerList = styled.div`\n  display: 'block';\n  gap: 50px;\n  padding-bottom: 30px;\n  border-bottom: 2px solid orangered;\n  @media (min-width: 600px) {\n    display: flex;\n    max-width: 1200;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin-right: 10px;\n  width: 200px;\n  height: 30px;\n  outline-color: orangered;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Btn } from '../MovieItem/MovieItem.styled';\nimport { Input } from './SearchBox.styled';\n\nconst SearchBox = ({ value, onSubmit, onChange }) => {\n  const [searchInput, setSearchInput] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchInput);\n    setSearchInput('');\n  };\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Please enter movies name\"\n        value={searchInput}\n        name=\"name\"\n        onChange={e => setSearchInput(e.target.value)}\n      />\n      <Btn type=\"submit\">Search</Btn>\n    </form>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\n// const SearchBox = ({ value, onChange }) => {\n//   return (\n//     <form>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Please enter movies name\"\n//         value={value}\n//         onChange={e => onChange(e.target.value)}\n//       />\n//       <button type=\"submit\">Search</button>\n//     </form>\n//   );\n// };\n\n// export default SearchBox;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  text-decoration: none;\n  list-style: none;\n`;\nexport const Links = styled(Link)`\n  font-size: 600;\n  text-decoration: none;\n  color: black;\n\n  :hover {\n    color: orangered;\n    background: gray;\n    opacity: 0.7;\n  }\n  &.active {\n    color: orangered;\n    border: 1px solid red;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport SearchBox from '../components/SearchBox/SearchBox';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../services/GetMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { List, Links } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const value = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (value === null) {\n      return;\n    }\n    setLoading(true);\n    const searchFetch = async () => {\n      try {\n        const { results } = await getSearchMovies(value);\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    searchFetch();\n  }, [value]);\n\n  const visibleMovies = movies.filter(movie =>\n    movie.original_title.toLowerCase().includes(value.toLowerCase())\n  );\n  console.log(visibleMovies);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <section>\n      {loading && <Loader />}\n      {error !== null && <p>Sorry,there is no movies</p>}\n      <SearchBox\n        value={value}\n        onSubmit={updateQueryString}\n        onChange={visibleMovies}\n      />\n      {visibleMovies.length > 0 ? (\n        <List>\n          {visibleMovies.map(({ id, title }) => (\n            <li key={id}>\n              <Links to={`${id}`} state={{ from: location }}>\n                <p>{title}</p>\n              </Links>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <p>Try to find something!</p>\n      )}\n    </section>\n  );\n};\n\nexport default Movies;\n\n// import { useState, useEffect } from 'react';\n// import SearchBox from '../components/SearchBox/SearchBox';\n// import { Link, useLocation, useSearchParams } from 'react-router-dom';\n// import { getSearchMovies } from '../services/GetMovies';\n// import { Loader } from 'components/Loader/Loader';\n\n// const Movies = () => {\n//   const [movies, setMovies] = useState([]);\n//   const location = useLocation();\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const value = searchParams.get('query') ?? '';\n//   useEffect(() => {\n//     if (value === null) {\n//       return;\n//     }\n//     setLoading(true);\n//     const searchFetch = async () => {\n//       try {\n//         const { results } = await getSearchMovies(value);\n//         setMovies(results);\n//         console.log(results);\n//       } catch (error) {\n//         setError(error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     searchFetch();\n//   }, [value]);\n\n//   // const visibleMovies = movies.filter(movie =>\n//   //   movie.name.toLowerCase().includes(value.toLowerCase())\n//   // );\n\n//   const updateQueryString = query => {\n//     const nextParams = query !== '' ? { query } : {};\n//     setSearchParams(nextParams);\n//   };\n\n//   return (\n//     <section>\n//       {loading && <Loader />}\n//       {error && <p>Sorry,try to find something else</p>}\n//       <SearchBox value={value} onChange={updateQueryString} />\n//       {movies.length > 0 ? (\n//         <ul>\n//           {movies.map(({ id, title }) => (\n//             <li key={id}>\n//               <Link to={`${id}`} state={{ from: location }}>\n//                 <p>{title}</p>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <p>Sorry,there is no movies</p>\n//       )}\n//     </section>\n//   );\n// };\n\n// export default Movies;\n","import axios from 'axios';\n\nconst KEY = '2ee3138b7264f5045a82f30264daff8e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const { data } = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return data;\n}\nexport async function getSearchMovies(query) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return data;\n}\n\nexport async function getMovieDetails(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}?api_key=${KEY}`);\n  return data;\n}\nexport async function getMovieCredits(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n  return data;\n}\nexport async function getMovieReviews(movie_id) {\n  const { data } = await axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n  return data;\n}\n"],"names":["Btn","styled","ContainerList","Input","value","onSubmit","onChange","useState","searchInput","setSearchInput","e","preventDefault","type","placeholder","name","target","List","Links","Link","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","error","setError","loading","setLoading","get","useEffect","searchFetch","getSearchMovies","results","visibleMovies","filter","movie","original_title","toLowerCase","includes","console","log","Loader","query","length","map","id","title","to","state","from","KEY","getTrendingMovies","axios","data","getMovieDetails","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}